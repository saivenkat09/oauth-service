#+TITLE: Deploying the CAS Service on a server
#+AUTHOR: Shubh
#+DATE: [2017-10-30 Mon]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document will illustrate installation of all the dependencies required
  for setting up the CAS application for the deployment phase.

* Starting the virtual environment
  We will use the vagrant box provided by VLEAD to set up the server
  The link to set up the box is given [[https://github.com/vlead/vlead-onboarding/blob/master/src/set-up-vlead-dev-vagrant-box.org][here]]

  After setting up the vagrant box, uncomment the config for *public
  network* (line 34) to link the vagrant box to a seprate IP.
  
  Current password : =vargrant=

* Set up the proxy
** Basic setup on .bashrc
  Export the following variables
  #+BEGIN_EXAMPLE
  HTTP_PROXY=http://proxy.iiit.ac.in:8080/
http_proxy=http://proxy.iiit.ac.in:8080/
FTP_PROXY=http://proxy.iiit.ac.in:8080/
all_proxy=socks://proxy.iiit.ac.in:8080/
HTTPS_PROXY=http://proxy.iiit.ac.in:8080/
https_proxy=http://proxy.iiit.ac.in:8080/
no_proxy=::1,localhost,127.0.0.1/8,0.0.0.0,iiit.ac.in,*.iiit.ac.in,iiit.net,*.iiit.net,iiith.org,172.16.0.0/12,192.168.0.0/16,10.0.0.0/8
ALL_PROXY=socks://proxy.iiit.ac.in:8080/
ftp_proxy=http://proxy.iiit.ac.in:8080/
  #+END_EXAMPLE

** Apt-get 
   Add the following lines to /etc/apt/apt.conf
   #+BEGIN_SRC 
   Acquire::http::proxy "http://proxy.iiit.ac.in:8080/";
   Acquire::https::proxy "https://proxy.iiit.ac.in:8080/";
   #+END_SRC
  
* Install JDK-8 and systemd
#+BEGIN_SRC :tangle setup.sh :eval no
sudo -E add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install openjdk-8-source
sudo apt-get install systemd
#+END_SRC
* Install Maven
  Maven is the Java Managment Tool, in our service we have used maven
  to download, maintain and build the CAS module.
  
  Note: We are using Maven3 so only install that otherwise we might
  get dependencies issue with Maven 2 or Msven 1
#+BEGIN_SRC :tangle setup.sh :eval no 
sudo apt-get install maven
#+END_SRC

** Setiting proxy in Maven 
   For maven to download all the dependencies on a proxy netowrk
   1. Open /etc/maven/settings.xml 
   2. Go to the proxies section 
   3. Add 
      #+BEGIN_EXAMPLE
      <proxy>
      <active>true</active>
      <protocol>http</protocol>
      <username>proxyuser</username>
      <password>proxypass</password>
      <host>proxy.iiit.ac.in</host>
      <port>8080</port>
      <nonProxyHosts>local.net|some.host.com</nonProxyHosts>
      </proxy>
      #+END_EXAMPLE
   
* Install Tomcat
To install tomcat we must have to add it as a group user 
#+BEGIN_SRC :tangle setup.sh
sudo groupadd tomcat
sudo mkdir /opt/tomcat
sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
cd /tmp
sudo curl -O http://redrockdigimark.com/apachemirror/tomcat/tomcat-8/v8.5.23/bin/apache-tomcat-8.5.23.zip  -x http://proxy.iiit.ac.in:8080 
unzip apache-tomcat-8.5.23.zip
sudo mv apache-tomcat-8.5.23/* /opt/tomcat/
cd /opt/tomcat
sudo chgrp -R tomcat /opt/tomcat
sudo chmod -R g+r conf
sudo chmod g+x conf
sudo chown -R tomcat webapps/ work/ temp/ logs/
sudo chgrp -R tomcat bin
sudo chmod g+rwx bin
sudo chmod g+r bin/*
sudo chmod +x bin/*.sh
#+END_SRC

** Create a systemd file for tomcat 
*** Find out and update the JAVA_HOME env variable
#+BEGIN_SRC :tangle setup.sh 
export JAVA_HOME=$(sudo update-java-alternatives -l | cut -d ' ' -f 3)
JAVA_HOME+="/jre"
echo $JAVA_HOME
sudo emacs /etc/systemd/system/tomcat.service
#+END_SRC 
*** Add the following lines to /etc/systemd/system/tomcat.serivce
Also update the JAVA_HOME
#+BEGIN_EXAMPLE
[Unit]
Description=Apache Tomcat Web Application Container
After=network.target

[Service]
Type=forking

Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre
Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat
Environment=CATALINA_BASE=/opt/tomcat
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'

ExecStart=/opt/tomcat/bin/startup.sh
ExecStop=/opt/tomcat/bin/shutdown.sh

User=tomcat
Group=tomcat
UMask=0007
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target
#+END_EXAMPLE
*** Start and enable tomcat 
Once tomcat is added and the permisssions are set, start tomcat and if
the status is =running=, enable it so we dont have to start it after
every time we boot
   #+BEGIN_SRC 
   sudo systemctl start tomcat
sudo systemctl status tomcat
sudo systemctl enable tomcat
   #+END_SRC

* Pull the Repo and make it 
#+BEGIN_SRC setup.sh
git clone https://github.com/shubhMaheshwari/oauth-service.git
cd oauth-service
make
cd build/code/vlead-cas-overlay
chmod +x run.sh 
./run.sh
#+END_SRC


