#+TITLE: Documentation Currently Oauth Serivce
#+AUTHOR: Projit Bandyopadhyay
#+DATE: [2017-06-08 Thursday]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil


* Documentation

** Resources

- Oauth Documentation: https://oauth.net/2/

- Oauth implementation http://www.swisspush.org/security/2016/10/17/oauth2-in-depth-introduction-for-enterprises

- Example Test http://www.hascode.com/2016/03/setting-up-an-oauth2-authorization-server-and-resource-provider-with-spring-boot/

- Flask way http://flask-oauthlib.readthedocs.io/en/latest/oauth2.html

- Django http://oauthlib.readthedocs.io/en/latest/oauth2/server.html

- Consolidated Java Implementations
https://stackoverflow.com/questions/10296681/is-there-an-oauth-2-0-provider-implementation-in-java-not-oauth-client

- Django Good Implementation
  https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html

- Node https://github.com/jaredhanson/oauth2orize

  
** Explanation
[[../design/diagrams/abstract_flow.png][Flow of Information]]

4 Components : 

*** Resource Owner

- This is the User. The user wants to interact with the client(application)

*** Client

- Client is the Application that wants access to the user's account. Before it
  receives access, the user must authorize it to do so.

*** Resource / Authorization Server

- Protects the User's data and verifies the authenticity of the user. It then
  issues access tokens to the client.




* Other Possibilities
https://github.com/jaredhanson/oauth2orize


* References
- To create Sign in + Registration
https://simpleisbetterthancomplex.com/tutorial/2017/02/18/how-to-create-user-sign-up-view.html


* Oauth Info

** Client
- Needs to register with the authorization server
*** Registration
- Needs to provide what type of client(Confidential or Public section 2.1 of
  oauth documentation) and redirect URIs(and any additional info like: (e.g.,
  application name, website, description, logo image, the acceptance of legal
  terms).).
- Needs some form of authentication with the auth server. may have a client
  password or some form of public/private key security measure. The degree of
  security is to be determined by the needs of the auth server.

** Protocol Endpoints
*** Authorization Endpoint
- Where the resource is interacted with to get authorization grant.
- Auth server must use TLS for transmission to auth endpoint
*** Redirection Endpoint
- Must be an absolute URI
** Authorization Flow



* gitlab is open source, find the authentication and authorization component.


* refer to https://github.com/babelouest/glewlwyd



